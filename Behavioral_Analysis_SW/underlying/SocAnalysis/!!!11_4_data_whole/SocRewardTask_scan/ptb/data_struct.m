data(k).Npoints = choice; %information / points. input to learning model
data(k).lapse1 = lapse1;
data(k).lapse2 = lapse2;
data(k).deckchoice = deckchoice;
data(k).RT1 = RT1;
data(k).RT2 = RT2;
data(k).choice_onset = choice_onset;
data(k).press1_onset = press1_onset;
data(k).info_onset = info_onset;
data(k).partner_onset = partner_onset;
data(k).press2_onset = press2_onset;
data(k).aff_onset = aff_onset;
data(k).fix1_list = fix1_list(k);
data(k).fix2_list = fix2_list(k);
data(k).fix3_list = fix3_list(k);
data(k).fix4_list = fix4_list(k);
data(k).soc_win = soc_win(k); % win or lose the points
data(k).block = block;
data(k).duration = duration;
data(k).frequency = frequency;
data(k).stimaff = stimaff;
data(k).stiminf = stiminf;
data(k).point_total = point_total;
data(k).word = words{1};
data(k).rating = value;
data(k).is_catch = is_catch(k);
data(k).partner = partner(k);
data(k).highval_count = highval_count;
